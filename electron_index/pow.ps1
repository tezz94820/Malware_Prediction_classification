$AvSigVersion = (Get-MpComputerStatus).AntivirusSignatureVersion
$Census_OEMModelIdentifier = (Get-CimInstance -ClassName Win32_ComputerSystem).Model.TrimEnd('.')
$Remaining_Disks_Capacity = (Get-WmiObject Win32_LogicalDisk | Where-Object {$_.DriveType -eq 3} | Select-Object FreeSpace).FreeSpace
$C_drive_capacity = (Get-WmiObject Win32_LogicalDisk | Where-Object {$_.DeviceID -eq 'C:'} | Select-Object Size).Size
$Census_SystemVolumeTotalCapacity = (Get-WmiObject -Class Win32_Volume | Where-Object {$_.Label -eq "System"} | Select-Object -ExpandProperty Capacity) / 1MB
$Census_OSVersion = (Get-WmiObject -Class Win32_OperatingSystem).Version
$Census_OSBuildRevision = (Get-WmiObject -Class Win32_OperatingSystem).BuildNumber
$Firewall = if ((Get-NetFirewallProfile -All).enabled) { 1 } else { 0 }
$Census_IsTouchEnabled = if ((Get-WmiObject -Class Win32_ComputerSystem).PCSystemType -eq 2) {1} else {0}
$UacLuaenable = (Get-ItemProperty -Path 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System' -Name EnableLUA).EnableLUA




#all  variables collected
$allVariables = @{
	"AvSigVersion" = $AvSigVersion
	"Census_OEMModelIdentifier" = $Census_OEMModelIdentifier
	"Remaining_Disks_Capacity" = $Remaining_Disks_Capacity
	"C_drive_capacity" = $C_drive_capacity
	"Census_SystemVolumeTotalCapacity" = $Census_SystemVolumeTotalCapacity
	"Census_OSVersion" = $Census_OSVersion
	"Census_OSBuildRevision" = $Census_OSBuildRevision	
	"Firewall" = $Firewall	
	"Census_IsTouchEnabled" = $Census_IsTouchEnabled
	"UacLuaenable" = $UacLuaenable
}

# Get the script directory
$scriptDirectory = Split-Path -Parent $MyInvocation.MyCommand.Definition


# Define the folder name
$folderName = "config"

# Create the folder if it doesn't exist
$folderPath = Join-Path -Path $scriptDirectory -ChildPath $folderName
if (-not (Test-Path -Path $folderPath -PathType Container)) {
    New-Item -ItemType Directory -Path $folderPath | Out-Null
}

# Generate the file name based on the current date
$fileName = "T_" + (Get-Date).ToString("dd_MM_yyyy") + ".txt"

# Saving the variables in the generated file under the "config" folder
$filePath = Join-Path -Path $folderPath -ChildPath $fileName
$allVariables.GetEnumerator() | ForEach-Object { "$($_.Key)=$($_.Value)" } | Out-File -FilePath $filePath
# Write-Host "Variables stored in $filePath"